import '/Users/hamzayounas/Desktop/Testing E-Commerce Web/cypress/support/Utilities.js';

describe('This suite contain test cases of login and signup', () => {
    // beforeEach(() => {
    //     cy.login()
    //   })
    it('Verify new user register and delete account sucessfully', () => {
        cy.visit(Cypress.env('baseUrl'))
        cy.get('a[href="/login"]').click()
        cy.UserSignUp('Hamza', (Cypress.env('email')))
        cy.NewUserRegistration()
        cy.UserNameVisibility()
        //cy.Del_Account()
     })
    it('Verify user login sucessfully after entering correct credentials', () => {
        cy.login((Cypress.env('email')), (Cypress.env('password')))
        cy.UserNameVisibility()
        cy.Del_Account()
    })
    it('Verify user does not login with incorrect password', () => {
        cy.login((Cypress.env('email')), 'WrongPassword')
        cy.get('.login-form > form > p').should('have.text', 'Your email or password is incorrect!')
    })
    it('Verify user logout sucessfully', () => {
        cy.login((Cypress.env('email')), 'WrongPassword')
        cy.UserNameVisibility()
        cy.get('a[href="/logout"]').click();
        cy.get('.login-form').should('exist');
    })
    it('Verify user get an error on Registering User with an existing email', () => {
        cy.visit(Cypress.env('baseUrl'))
        cy.get('a[href="/login"]').click()
        cy.UserSignUp('Hamza', (Cypress.env('email')))
        cy.get('.signup-form > form > p').should('have.text', 'Email Address already exist!')
    })
    it('Verfiy user can signup while checkout', () => {
        cy.ProductPageVisit()
        cy.AddProductsInCart()
        cy.get('.col-sm-6 > .btn').click()
        cy.get('a[href="/login"]').eq(1).click()
        cy.UserSignUp('Hamza', (Cypress.env('email')))
        cy.NewUserRegistration()
        cy.UserNameVisibility()
        cy.contains('a', 'Cart').click()
        cy.get('.col-sm-6 > .btn').click()
        cy.get('.step-one').eq(0).should('be.visible')
        cy.get('.step-one').eq(1).should('be.visible')
        cy.get('.form-control').type('testing')
        cy.contains('Place Order').click()
        cy.get('[data-qa="name-on-card"]').type('Test')
        cy.get('[data-qa="card-number"]').type('121312')
        cy.get('[data-qa="cvc"]').type(12)
        cy.get('[data-qa="expiry-month"]').type('01')
        cy.get('[data-qa="expiry-year"]').type('2024')
        cy.get('[data-qa="pay-button"]').click()
        cy.get('#success_message > .alert-success').should('be.visible').and('contain', 'Your order has been placed successfully!')
        cy.Del_Account()
    })
    it('Verify user checkout after signup', ()=>{
        cy.visit(Cypress.env('baseUrl'))
        cy.get('a[href="/login"]').click()
        cy.UserSignUp('Hamza', (Cypress.env('email')))
        cy.NewUserRegistration()
        cy.UserNameVisibility()
        cy.get('.productinfo.text-center').eq(0).trigger('mouseover').find('.add-to-cart').click({ multiple: true })
        cy.get('.modal-footer > .btn').should('be.visible').click()
        cy.contains('a', 'Cart').click()
        cy.get('#product-1 > .cart_product > a > .product_image').should('be.visible')
        cy.PlaceAnOrder()
        cy.Del_Account()
    })
    it('Verify user place an order after login', ()=>{
        cy.login((Cypress.env('email')), (Cypress.env('password')))
        cy.UserNameVisibility()
        cy.get('.productinfo.text-center').eq(0).trigger('mouseover').find('.add-to-cart').click({ multiple: true })
        cy.get('.modal-footer > .btn').should('be.visible').click()
        cy.contains('a', 'Cart').click()
        cy.get('#product-1 > .cart_product > a > .product_image').should('be.visible')
        cy.PlaceAnOrder()
        cy.Del_Account()

    })
    it("Verify address details are correct in checkout page", ()=>{
        cy.visit(Cypress.env('baseUrl'))
        cy.get('a[href="/login"]').click()
        cy.UserSignUp('Hamza', (Cypress.env('email')))
        cy.NewUserRegistration()
        cy.UserNameVisibility()
        cy.ProductPageVisit()
        cy.AddProductsInCart()
        cy.get('.col-sm-6 > .btn').click()
        cy.get('li.address_address1.address_address2').eq(1).should('have.text', Cypress.env('CustomerAddress'))
        cy.get('li.address_address1.address_address2').eq(4).should('have.text', Cypress.env('CustomerAddress'))
        cy.Del_Account()
    })  
    it.only("Verify user can Download Invoice after purchase order", ()=>{
        cy.visit(Cypress.env('baseUrl'))
        cy.get('a[href="/login"]').click()
        cy.UserSignUp('Hamza', (Cypress.env('email')))
        cy.NewUserRegistration()
        cy.UserNameVisibility()
        cy.ProductPageVisit()
        cy.AddProductsInCart()
        cy.PlaceAnOrder()
        const downloadFilePath = 'Users/hamzayounas/Downloads'; 
        cy.get('.col-sm-9 > .btn-default').click().then(() => {
            cy.wait(5000)
            cy.readFile(downloadFilePath).should('exist')
          })
        cy.Del_Account()
    })  
})